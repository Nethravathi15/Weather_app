{"ast":null,"code":"var _jsxFileName = \"D:\\\\Assignment\\\\weather_app3\\\\src\\\\components\\\\currentWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport fetchWeatherData from '../api/weatherApi';\nimport { getLocationAPI } from '../api/geolocationAPI';\nimport { getWeatherDescription } from '../utils/getWeatherDescription';\nimport { formatDate } from '../utils/dateUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherComponent = () => {\n  _s();\n  var _weatherData$data, _weatherData$data$val, _weatherData$location, _weatherData$location2;\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  useEffect(() => {\n    const apiKey = 'vrHkYNNzUmidqBKPLpOhTdkbRQXVubdZ'; // Replace 'YOUR_API_KEY' with your Tomorrow.io API key\n\n    const fetchData = async () => {\n      try {\n        const {\n          latitude: fetchedLatitude,\n          longitude: fetchedLongitude,\n          error: locationError\n        } = await getLocationAPI();\n        if (locationError) {\n          throw new Error(locationError);\n        }\n        const data = await fetchWeatherData(apiKey, fetchedLatitude, fetchedLongitude);\n        setWeatherData(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Log weatherData whenever it changes\n    console.log(\"weatherData\", weatherData);\n\n    // Update date, day, and time when weatherData changes\n    if (weatherData) {\n      const {\n        date: formattedDate,\n        day: formattedDay,\n        time: formattedTime\n      } = formatDate(weatherData.data.time);\n      setDate(formattedDate);\n      setDay(formattedDay);\n      setTime(formattedTime);\n    }\n  }, [weatherData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Day: \", day]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time: \", time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.data.values.temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Feels Like: \", weatherData.data.values.temperatureApparent, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", getWeatherDescription(weatherData.data.values.weatherCode)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed: \", weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$data = weatherData.data) === null || _weatherData$data === void 0 ? void 0 : (_weatherData$data$val = _weatherData$data.values) === null || _weatherData$data$val === void 0 ? void 0 : _weatherData$data$val.windSpeed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$location = weatherData.location) === null || _weatherData$location === void 0 ? void 0 : _weatherData$location.lat, \",\", weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$location2 = weatherData.location) === null || _weatherData$location2 === void 0 ? void 0 : _weatherData$location2.lon]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherComponent, \"fp8+KOwWvWaiPsXj0abjBtqKaB0=\");\n_c = WeatherComponent;\nexport default WeatherComponent;\nvar _c;\n$RefreshReg$(_c, \"WeatherComponent\");","map":{"version":3,"names":["React","useState","useEffect","fetchWeatherData","getLocationAPI","getWeatherDescription","formatDate","jsxDEV","_jsxDEV","WeatherComponent","_s","_weatherData$data","_weatherData$data$val","_weatherData$location","_weatherData$location2","weatherData","setWeatherData","loading","setLoading","error","setError","latitude","setLatitude","longitude","setLongitude","date","setDate","day","setDay","time","setTime","apiKey","fetchData","fetchedLatitude","fetchedLongitude","locationError","Error","data","message","console","log","formattedDate","formattedDay","formattedTime","children","fileName","_jsxFileName","lineNumber","columnNumber","values","temperature","temperatureApparent","weatherCode","windSpeed","location","lat","lon","_c","$RefreshReg$"],"sources":["D:/Assignment/weather_app3/src/components/currentWeather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport fetchWeatherData from '../api/weatherApi';\nimport { getLocationAPI } from '../api/geolocationAPI';\nimport { getWeatherDescription } from '../utils/getWeatherDescription';\nimport { formatDate } from '../utils/dateUtils';\n\nconst WeatherComponent = () => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n\n  useEffect(() => {\n    const apiKey = 'vrHkYNNzUmidqBKPLpOhTdkbRQXVubdZ'; // Replace 'YOUR_API_KEY' with your Tomorrow.io API key\n    \n    const fetchData = async () => {\n      try {\n        const { latitude: fetchedLatitude, longitude: fetchedLongitude, error: locationError } = await getLocationAPI();\n        if (locationError) {\n          throw new Error(locationError);\n        }\n        const data = await fetchWeatherData(apiKey, fetchedLatitude, fetchedLongitude);\n        setWeatherData(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    // Log weatherData whenever it changes\n    console.log(\"weatherData\", weatherData);\n    \n    // Update date, day, and time when weatherData changes\n    if (weatherData) {\n      const { date: formattedDate, day: formattedDay, time: formattedTime } = formatDate(weatherData.data.time);\n      setDate(formattedDate);\n      setDay(formattedDay);\n      setTime(formattedTime);\n    }\n  }, [weatherData]);\n\n  return (\n    <div>\n      <h2>Current Weather</h2>\n      {loading && <p>Loading...</p>}\n\n      {weatherData && (\n        <div>\n          <p>Date: {date}</p>\n          <p>Day: {day}</p>\n          <p>Time: {time}</p>\n          <p>Temperature: {weatherData.data.values.temperature}°C</p>\n          <p>Feels Like: {weatherData.data.values.temperatureApparent}°C</p>\n          <p>Description: {getWeatherDescription(weatherData.data.values.weatherCode)}</p>\n          <p>Wind Speed: {weatherData?.data?.values?.windSpeed} m/s</p>\n          <p>Location: {weatherData?.location?.lat},{weatherData?.location?.lon}</p>\n          {/* <p>Place: {place}</p>  */}\n        </div>\n      )}\n      {error && <p>Error: {error}</p>}\n    </div>\n  );\n};\n\nexport default WeatherComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}